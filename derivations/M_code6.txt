nextP = zeros(6,6);
nextP(1,1) = OP(1,1);
nextP(1,2) = OP(1,2);
nextP(2,2) = OP(2,2);
nextP(1,3) = OP(1,3);
nextP(2,3) = OP(2,3);
nextP(3,3) = OP(3,3);
nextP(1,4) = OP(1,4) + OP(1,1)*dt;
nextP(2,4) = OP(2,4) + OP(2,1)*dt;
nextP(3,4) = OP(3,4) + OP(3,1)*dt;
nextP(4,4) = OP(4,4) + OP(1,4)*dt + dt*(OP(4,1) + OP(1,1)*dt);
nextP(1,5) = OP(1,5) + OP(1,2)*dt;
nextP(2,5) = OP(2,5) + OP(2,2)*dt;
nextP(3,5) = OP(3,5) + OP(3,2)*dt;
nextP(4,5) = OP(4,5) + OP(1,5)*dt + dt*(OP(4,2) + OP(1,2)*dt);
nextP(5,5) = OP(5,5) + OP(2,5)*dt + dt*(OP(5,2) + OP(2,2)*dt);
nextP(1,6) = OP(1,3)*dt;
nextP(2,6) = OP(2,3)*dt;
nextP(3,6) = OP(3,3)*dt;
nextP(4,6) = dt*(OP(4,3) + OP(1,3)*dt);
nextP(5,6) = dt*(OP(5,3) + OP(2,3)*dt);
nextP(6,6) = OP(3,3)*dt^2;
SH_RNG = zeros(1,1);
SH_RNG(1) = 1/((bcn_pos_d + deck_pos_d - veh_pos_d)^2 + (bcn_pos_e + deck_pos_e - veh_pos_e)^2 + (bcn_pos_n + deck_pos_n - veh_pos_n)^2)^(1/2);
H_RNG = zeros(1,6);
H_RNG(1,4) = (SH_RNG(1)*(2*bcn_pos_n + 2*deck_pos_n - 2*veh_pos_n))/2;
H_RNG(1,5) = (SH_RNG(1)*(2*bcn_pos_e + 2*deck_pos_e - 2*veh_pos_e))/2;
H_RNG(1,6) = (SH_RNG(1)*(2*bcn_pos_d + 2*deck_pos_d - 2*veh_pos_d))/2;
SK_RNG = zeros(5,1);
SK_RNG(1) = 1/(R_RNG + (SH_RNG(1)*((OP(5,5)*SH_RNG(1)*(2*bcn_pos_e + 2*deck_pos_e - 2*veh_pos_e))/2 + (OP(6,5)*SH_RNG(1)*(2*bcn_pos_d + 2*deck_pos_d - 2*veh_pos_d))/2 + (OP(4,5)*SH_RNG(1)*(2*bcn_pos_n + 2*deck_pos_n - 2*veh_pos_n))/2)*(2*bcn_pos_e + 2*deck_pos_e - 2*veh_pos_e))/2 + (SH_RNG(1)*((OP(5,6)*SH_RNG(1)*(2*bcn_pos_e + 2*deck_pos_e - 2*veh_pos_e))/2 + (OP(6,6)*SH_RNG(1)*(2*bcn_pos_d + 2*deck_pos_d - 2*veh_pos_d))/2 + (OP(4,6)*SH_RNG(1)*(2*bcn_pos_n + 2*deck_pos_n - 2*veh_pos_n))/2)*(2*bcn_pos_d + 2*deck_pos_d - 2*veh_pos_d))/2 + (SH_RNG(1)*((OP(5,4)*SH_RNG(1)*(2*bcn_pos_e + 2*deck_pos_e - 2*veh_pos_e))/2 + (OP(6,4)*SH_RNG(1)*(2*bcn_pos_d + 2*deck_pos_d - 2*veh_pos_d))/2 + (OP(4,4)*SH_RNG(1)*(2*bcn_pos_n + 2*deck_pos_n - 2*veh_pos_n))/2)*(2*bcn_pos_n + 2*deck_pos_n - 2*veh_pos_n))/2);
SK_RNG(2) = 2*bcn_pos_n + 2*deck_pos_n - 2*veh_pos_n;
SK_RNG(3) = 2*bcn_pos_e + 2*deck_pos_e - 2*veh_pos_e;
SK_RNG(4) = 2*bcn_pos_d + 2*deck_pos_d - 2*veh_pos_d;
SK_RNG(5) = SH_RNG(1);
Kfusion = zeros(6,1);
Kfusion = zeros(1,1);
Kfusion(1) = SK_RNG(1)*((OP(1,4)*SK_RNG(2)*SK_RNG(5))/2 + (OP(1,5)*SK_RNG(3)*SK_RNG(5))/2 + (OP(1,6)*SK_RNG(4)*SK_RNG(5))/2);
Kfusion(2) = SK_RNG(1)*((OP(2,4)*SK_RNG(2)*SK_RNG(5))/2 + (OP(2,5)*SK_RNG(3)*SK_RNG(5))/2 + (OP(2,6)*SK_RNG(4)*SK_RNG(5))/2);
Kfusion(3) = SK_RNG(1)*((OP(3,4)*SK_RNG(2)*SK_RNG(5))/2 + (OP(3,5)*SK_RNG(3)*SK_RNG(5))/2 + (OP(3,6)*SK_RNG(4)*SK_RNG(5))/2);
Kfusion(4) = SK_RNG(1)*((OP(4,4)*SK_RNG(2)*SK_RNG(5))/2 + (OP(4,5)*SK_RNG(3)*SK_RNG(5))/2 + (OP(4,6)*SK_RNG(4)*SK_RNG(5))/2);
Kfusion(5) = SK_RNG(1)*((OP(5,4)*SK_RNG(2)*SK_RNG(5))/2 + (OP(5,5)*SK_RNG(3)*SK_RNG(5))/2 + (OP(5,6)*SK_RNG(4)*SK_RNG(5))/2);
Kfusion(6) = SK_RNG(1)*((OP(6,4)*SK_RNG(2)*SK_RNG(5))/2 + (OP(6,5)*SK_RNG(3)*SK_RNG(5))/2 + (OP(6,6)*SK_RNG(4)*SK_RNG(5))/2);
SH_RNG2 = zeros(1,1);
SH_RNG2(1) = 1/((qd0^2 - qd1^2 - qd2^2 + qd3^2)*(qv0^2 - qv1^2 - qv2^2 + qv3^2) + (2*qd0*qd1 - 2*qd2*qd3)*(2*qv0*qv1 - 2*qv2*qv3) + (2*qd0*qd2 + 2*qd1*qd3)*(2*qv0*qv2 + 2*qv1*qv3));
H_RNG2 = zeros(1,6);
H_RNG2(1,4) = SH_RNG2(1)*(2*qd0*qd2 + 2*qd1*qd3);
H_RNG2(1,5) = -SH_RNG2(1)*(2*qd0*qd1 - 2*qd2*qd3);
H_RNG2(1,6) = SH_RNG2(1)*(qd0^2 - qd1^2 - qd2^2 + qd3^2);
SK_RNG2 = zeros(5,1);
SK_RNG2(1) = 1/(R_LASER + SH_RNG2(1)*(2*qd0*qd2 + 2*qd1*qd3)*(OP(6,4)*SH_RNG2(1)*(qd0^2 - qd1^2 - qd2^2 + qd3^2) + OP(4,4)*SH_RNG2(1)*(2*qd0*qd2 + 2*qd1*qd3) - OP(5,4)*SH_RNG2(1)*(2*qd0*qd1 - 2*qd2*qd3)) - SH_RNG2(1)*(2*qd0*qd1 - 2*qd2*qd3)*(OP(6,5)*SH_RNG2(1)*(qd0^2 - qd1^2 - qd2^2 + qd3^2) + OP(4,5)*SH_RNG2(1)*(2*qd0*qd2 + 2*qd1*qd3) - OP(5,5)*SH_RNG2(1)*(2*qd0*qd1 - 2*qd2*qd3)) + SH_RNG2(1)*(OP(6,6)*SH_RNG2(1)*(qd0^2 - qd1^2 - qd2^2 + qd3^2) + OP(4,6)*SH_RNG2(1)*(2*qd0*qd2 + 2*qd1*qd3) - OP(5,6)*SH_RNG2(1)*(2*qd0*qd1 - 2*qd2*qd3))*(qd0^2 - qd1^2 - qd2^2 + qd3^2));
SK_RNG2(2) = qd0^2 - qd1^2 - qd2^2 + qd3^2;
SK_RNG2(3) = 2*qd0*qd1 - 2*qd2*qd3;
SK_RNG2(4) = 2*qd0*qd2 + 2*qd1*qd3;
SK_RNG2(5) = SH_RNG2(1);
Kfusion = zeros(6,1);
Kfusion = zeros(1,1);
Kfusion(1) = SK_RNG2(1)*(OP(1,4)*SK_RNG2(4)*SK_RNG2(5) - OP(1,5)*SK_RNG2(3)*SK_RNG2(5) + OP(1,6)*SK_RNG2(2)*SK_RNG2(5));
Kfusion(2) = SK_RNG2(1)*(OP(2,4)*SK_RNG2(4)*SK_RNG2(5) - OP(2,5)*SK_RNG2(3)*SK_RNG2(5) + OP(2,6)*SK_RNG2(2)*SK_RNG2(5));
Kfusion(3) = SK_RNG2(1)*(OP(3,4)*SK_RNG2(4)*SK_RNG2(5) - OP(3,5)*SK_RNG2(3)*SK_RNG2(5) + OP(3,6)*SK_RNG2(2)*SK_RNG2(5));
Kfusion(4) = SK_RNG2(1)*(OP(4,4)*SK_RNG2(4)*SK_RNG2(5) - OP(4,5)*SK_RNG2(3)*SK_RNG2(5) + OP(4,6)*SK_RNG2(2)*SK_RNG2(5));
Kfusion(5) = SK_RNG2(1)*(OP(5,4)*SK_RNG2(4)*SK_RNG2(5) - OP(5,5)*SK_RNG2(3)*SK_RNG2(5) + OP(5,6)*SK_RNG2(2)*SK_RNG2(5));
Kfusion(6) = SK_RNG2(1)*(OP(6,4)*SK_RNG2(4)*SK_RNG2(5) - OP(6,5)*SK_RNG2(3)*SK_RNG2(5) + OP(6,6)*SK_RNG2(2)*SK_RNG2(5));
rng_laser = zeros(1,1);
rng_laser(1) = ((deck_pos_d - veh_pos_d)*(qd0^2 - qd1^2 - qd2^2 + qd3^2) - (deck_pos_e - veh_pos_e)*(2*qd0*qd1 - 2*qd2*qd3) + (deck_pos_n - veh_pos_n)*(2*qd0*qd2 + 2*qd1*qd3))/((qd0^2 - qd1^2 - qd2^2 + qd3^2)*(qv0^2 - qv1^2 - qv2^2 + qv3^2) + (2*qd0*qd1 - 2*qd2*qd3)*(2*qv0*qv1 - 2*qv2*qv3) + (2*qd0*qd2 + 2*qd1*qd3)*(2*qv0*qv2 + 2*qv1*qv3));
